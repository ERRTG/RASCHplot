BARplot(itemsIncomp, which.item = 1)
# Chunk 15
BARplot(itemsIncomp, freq = FALSE)
# Chunk 16
BARplot(itemsIncomp, na.action = "na.rm")
# Chunk 17
BARplot(itemsIncomp, addsums = TRUE)
# Chunk 18
strat.var.gender <- factor(SPADI$gender)
levels(strat.var.gender) <-  list("male" = 1, "female" = 2)
# Chunk 19
BARplot(itemsIncomp, strat.var = strat.var.gender)
# Chunk 20
BARplot(itemsIncomp, which.item = 2, strat.var = strat.var.gender)
# Chunk 21
BARplot(itemsIncomp, which.item = 2, freq = FALSE, strat.var = strat.var.gender)
# Chunk 22
theme_set(theme_gray())
BARplot(itemsIncomp)
# Chunk 23
theme_set(theme_minimal())
# Chunk 24
barobj <- BARplot(itemsIncomp)
# Chunk 25
barobj +
scale_fill_brewer(palette="Set3", na.value = "grey")
# Chunk 26
barobj + theme(legend.position="top")
# Chunk 27
barobj + ggtitle("Distribution of item responses")
# Chunk 28
CICCplot(fit)
# Chunk 29
CICCplot(fit, lower.groups = c(1,5,15,20,30,35))
# Chunk 30
CICCplot(fit, error.bar = FALSE)
# Chunk 31
CICCplot(fit, which.item = c(3,4))
# Chunk 32
CICCplot(fit, which.item = "all")
# Chunk 33
CICCplot(model = fit, which.item = "all", grid.items = TRUE,
common.legend = TRUE, ncol = 2, nrow = 4)
# Chunk 34
p <- CICCplot(model = fit, which.item = c(1,2))
p
# Change colours for item 1
p[[1]] +
scale_colour_manual(values = c("burlywood","cornflowerblue"))
# Change colours for item 2
p[[2]] +
scale_colour_manual(values = c("burlywood","cornflowerblue"))
# Chunk 35
theme_set(theme_gray())
CICCplot(fit)
# Chunk 36
theme_set(theme_minimal())
# Chunk 37
ciccobj <- CICCplot(fit)[[1]]
# Chunk 38
ciccobj +
scale_colour_manual(values = c("burlywood","cornflowerblue"))
# Chunk 39
ciccobj +
scale_colour_manual(values = c("burlywood","cornflowerblue")) +
xlim(c(3, 37))
# Chunk 40
ciccobj +
ylim(c(0,5))
# Chunk 41
ciccobj +
scale_x_continuous(breaks = seq(0, 40, 5), minor_breaks = NULL) +
scale_y_continuous(breaks = 0:5, minor_breaks = NULL)   +
ylim(c(0,5))
# Chunk 42
ciccobj +
ylab("Item-score for item D1") +
ggtitle("")
# Chunk 43
ciccobj +
theme(plot.title = element_text(hjust = 0.5))
# Chunk 44
DIFplot(fit)
# Chunk 45
strat.vars <- list(gender = SPADI.complete[, "gender"])
DIFplot(model = fit, strat.vars = strat.vars)
# Chunk 46
strat.vars <- list(gender = SPADI.complete[, "gender"], over60 = SPADI.complete[, "over60"])
DIFplot(model = fit, strat.vars = strat.vars)
strat.vars <- list(gender = SPADI.complete[, "gender"])
DIFplot(model = fit, strat.vars = strat.vars)
DIFplot(model = fit, strat.vars = strat.vars, dodge.width = 0)
browseVignettes("RASCHplot
")"
"
browseVignettes("RASCHplot")
library(eRm)
?eRm
?RM
?CICCplot
library(RASCHplot)
?CICCplot
library(ggplot2)
?geom_histogram
?CICCplot
?ggplot
devtools::document()
library(RASCHplot)
?CICCplot
devtools::document()
library(RASCHplot)
?CICCplot
devtools::document()
library(RASCHplot)
devtools::document()
library(RASCHplot)
?ggpubr
scale_x_continuous integer_breaks
devtools::document()
library(RASCHplot)
devtools::document()
library(RASCHplot)
devtools::document()
devtools::document()
library(RASCHplot)
CICCplot(model = model.SPADI)
library(eRm)
data(SPADI)
SPADI.complete <- SPADI[complete.cases(SPADI), ]
it.SPADI <- SPADI.complete[, 9:16]
model.SPADI <- eRm::PCM(it.SPADI)
# Plot item 1
CICCplot(model = model.SPADI)
model = model.SPADI
which.item = 1
lower.groups = "all"
data <- model$X
betas <- model$betapar
k <- ncol(data)
m_i <- sapply(1:k, FUN = function(i) length(unique(data[,i]))-1)
parsidx <- rep(1:k, m_i)
if (any(which.item == "all")) {
itmidx <- 1:k
} else {
itmidx <- suppressWarnings(as.numeric(which.item))
if (anyNA(itmidx)) {
stop("all values of which.item can not be converted to numeric")
}
}
n.itemcat <- apply(data, 2, FUN = function(x) {max(x, na.rm = T) - min(x, na.rm = T)})
par.itemgrp <- rep(1:ncol(data), times = n.itemcat)
if (is.double(lower.groups) | is.integer(lower.groups)) {
if (any(lower.groups>length(betas))) {
stop("lower.group index greater than maximum possible score")
}
}
if (any(itmidx > k)) {
stop("some values of which.item are greater than number of items in the model")
}
if (any(itmidx < 1)) {
stop("some values of which.item < 1")
}
pp <- list(rep(NA, length(itmidx)))
ii <- itmidx
Tot.val <- 0:length(betas)
plotidx <- 1
itm=1
Tot.val <- 0:length(betas)
exp.val <- sapply(Tot.val, FUN = function(R) {
l <- par.itemgrp[par.itemgrp!=itm]
par.itemgrp_noitem <- ifelse(l > itm, l-1, l)
g1 <- gamma_r_rec_pcm(betas, R, par.itemgrp)
return(sum(sapply(1:sum(par.itemgrp==itm), FUN = function(X) {
g2 <- gamma_r_rec_pcm(betas[par.itemgrp!=itm], R-X, par.itemgrp_noitem)
return(X*exp(betas[par.itemgrp==itm][X])*g2/g1)})))
})
#' Gamma polynomials (recursive formula)
#' @param pars A vector of item parameters
#' @param r The total score
#' @param par.grp The grouping of scores
#' @noRd
gamma_r_rec_pcm <- memoise::memoise(function(pars, r, par.grp){
if (r == 0)
return(1)
if (r > length(pars) | r<0)
return(0)
if (r != 0 | r <= length(pars)) {
A <- exp(pars[par.grp==1])
B <- sapply(1:length(pars[par.grp==1]), FUN = function(x){
gamma_r_rec_pcm(pars = pars[par.grp!=1],
r = r-x,
par.grp = par.grp[par.grp!=1]-1)})
C <- gamma_r_rec_pcm(pars = pars[par.grp!=1], r = r, par.grp = par.grp[par.grp!=1]-1)
return({sum(A * B) + C})
}
})
#' A function factory for getting integer y-axis values.
#' @param n n
#' @noRd
integer_breaks <- function(n = 5, ...) {
fxn <- function(x) {
breaks <- floor(pretty(x, n, ...))
names(breaks) <- attr(breaks, "labels")
breaks
}
return(fxn)
}
exp.val <- sapply(Tot.val, FUN = function(R) {
l <- par.itemgrp[par.itemgrp!=itm]
par.itemgrp_noitem <- ifelse(l > itm, l-1, l)
g1 <- gamma_r_rec_pcm(betas, R, par.itemgrp)
return(sum(sapply(1:sum(par.itemgrp==itm), FUN = function(X) {
g2 <- gamma_r_rec_pcm(betas[par.itemgrp!=itm], R-X, par.itemgrp_noitem)
return(X*exp(betas[par.itemgrp==itm][X])*g2/g1)})))
})
data_exp <- data.frame(Tot.val, exp.val)
!is.double(lower.groups) & !is.integer(lower.groups)
lower.groups == "all"
#Tot.val_grp <- 0:length(phi)
Tot.val_grp <- 0:length(betas)
obs.val_grp <- sapply(Tot.val_grp, FUN = function(x) {mean(data[which(rowSums(data) == x), itm])})
var.val_grp <- sapply(Tot.val_grp, FUN = function(x) {var(data[which(rowSums(data) == x), itm])})
n.val_grp <- sapply(Tot.val_grp, FUN = function(x) {length(data[which(rowSums(data) == x), itm])})
is.double(lower.groups)|is.integer(lower.groups)
data_obs <- data.frame(Tot.val_grp, obs.val_grp, var.val_grp, n.val_grp, CI.bound = NA)
data_obs <- data_obs[data_obs$n.val_grp != 0, ]
error.bar
error.bar = TRUE
if (error.bar) {
data_obs$CI.bound <- 1.96*sqrt(data_obs[,3]/data_obs[,4])
}
col <- c("Expected" = "darkgrey", "Observed" = "orange")
itmtit <- colnames(data)[itm]
pp[[plotidx]] <- ciccplot(data_exp, Tot.val, exp.val, data_obs, Tot.val_grp, obs.val_grp, itmtit, col)
#' Internal CICC plot function
#' @param data_exp data_exp
#' @param Tot.val Tot.val
#' @param exp.val exp.val
#' @param data_obs data_obs
#' @param Tot.val_grp Tot.val_grp
#' @param obs.val_grp obs.val_grp
#' @param itmtit itmtit
#' @param col col
#' @noRd
ciccplot <- function(data_exp, Tot.val, exp.val, data_obs, Tot.val_grp, obs.val_grp, itmtit, CI.bound, col) {
x <- ggplot(data = data_exp, aes(x = Tot.val, y= exp.val, color = "Expected")) +
geom_line() + #linetype = "dashed") +
#geom_point() +
geom_point(data = data_obs, aes(x = Tot.val_grp, y = obs.val_grp, color = "Observed"), size = 1) +
scale_colour_manual(values = col) +
ggtitle(paste0("Item: ", itmtit)) +
xlab("Total Score") +
ylab("Item-Score") +
geom_errorbar(data = data_obs, aes(x = Tot.val_grp, y = obs.val_grp,
ymin = obs.val_grp - .data$CI.bound, ymax = obs.val_grp + .data$CI.bound,
color = "Observed"),
width = 0) + #, size = .5) +
scale_x_continuous(breaks = integer_breaks(), minor_breaks = Tot.val) + #breaks = Tot.val) +
guides(colour = guide_legend(override.aes = list(shape = c(NA, 1))))
}
pp[[plotidx]] <- ciccplot(data_exp, Tot.val, exp.val, data_obs, Tot.val_grp, obs.val_grp, itmtit, col)
plotidx <- plotidx+1
library(RASCHplot)
CICCplot(model = model.SPADI)
?all_of
.data$
items <- SPADI[,9:16]
which.item = "all"
freq = TRUE
addsums = FALSE
na.action = c("na.plot")
(is.double(which.item) | is.integer(which.item))
if (is.double(which.item) | is.integer(which.item)) {
if (any(which.item < 1) | any(which.item > ncol(data))) {
stop("some values of which.item are smaller than 1 or greater than number of items in the model")
}
}
if(any(class(data) %in% c("Rm", "eRm"))) {
df <- data$X
} else if (any(class(data) == "matrix")) {
df <- as.data.frame(data)
} else {
df <- data
}
if (!is.null(strat.var) & length(strat.var) != nrow(df)) {
stop("lengths of stratification variable must equal number of rows in data input")
}
strat.var = NULL
if (is.null(strat.var)) {
longdf <- longdffct(df, which.item, freq)
barplt(longdf, addsums, na.action, freq)
} else {
longdf <- longdffct(df, which.item, freq, strat.var)
barplt(longdf, addsums, na.action, freq, strat.var)
}
any(is.numeric(which.item)) & length(which.item) == 1
dfs <- data.frame(df, strat.var = strat.var)
df
all(which.item == "all")
if (all(which.item == "all")) {
which.item <- 1:ncol(df)
}
is.null(strat.var)
df %>%
dplyr::select(dplyr::all_of(which.item))
library(tidyverse)
df %>%
dplyr::select(dplyr::all_of(which.item))
df %>%
dplyr::select(dplyr::all_of(which.item)) %>%
tidyr::pivot_longer(dplyr::any_of(colnames(df)[which.item]), names_to = "item", values_to = "Score")
df %>%
dplyr::select(dplyr::all_of(which.item)) %>%
tidyr::pivot_longer(dplyr::any_of(colnames(df)[which.item]), names_to = "item", values_to = "Score") %>%
dplyr::mutate(Score = as.factor(Score))
df %>%
dplyr::select(dplyr::all_of(which.item)) %>%
tidyr::pivot_longer(dplyr::any_of(colnames(df)[which.item]), names_to = "item", values_to = "Score") %>%
dplyr::mutate(Score = as.factor(.data$Score))
devtools::document()
?qpdf
library(qpdf)
install.packages("qpdf")
library(pdftools)
install.packages("pdftools")
library(RASCHplot)
library("eRm")
library("ltm")
library("difR")
data(verbal, package = "difR")
dat_1 <- verbal[, 1:24]
res_rm_1 <- RM(dat_1)
plotICC(res_rm_1, item.subset = "S2WantShout")
abline(v = -0.18, col = "grey")
abline(h = .5, col = "grey")
plotICC(res_rm_1, item.subset = "S2WantShout", bty = "n")
?plot
plotICC(res_rm_1, item.subset = "S2WantShout", bty = "n", axes = FALSE)
plotICC(res_rm_1, item.subset = "S2WantShout", bty = "n", axes = FALSE,
xlab = "", ylab = "", main = "")
text(x = 0, y = 0.5, "RASCHplot", srt=20)
text(x = 0, y = 0.5, "RASCHplot", srt=25)
text(x = 0, y = 0.5, "RASCHplot", srt=45)
plotICC(res_rm_1, item.subset = "S2WantShout", bty = "n", axes = FALSE,
xlab = "", ylab = "", main = "")
text(x = 0, y = 0.5, "RASCHplot", srt=45)
?postscript
getwd()
pdf("/home/ann-sophie/wip/pa2122/karl/raschplots/ggp.pdf", family = "Courier")
plotICC(res_rm_1, item.subset = "S2WantShout", bty = "n", axes = FALSE,
xlab = "", ylab = "", main = "")
text(x = 0, y = 0.5, "RASCHplot", srt=45)
dev.off()
?text
plotICC(res_rm_1, item.subset = "S2WantShout", bty = "n", axes = FALSE,
xlab = "", ylab = "", main = "")
text(x = 0, y = 0.5, "RASCHplot", srt=45, cex = 3)
text(x = 0, y = 0.55, "RASCHplot", srt=45, cex = 3)
text(x = 0, y = 0.65, "RASCHplot", srt=45, cex = 3)
text(x = -.1, y = 0.65, "RASCHplot", srt=45, cex = 3)
plotICC(res_rm_1, item.subset = "S2WantShout", bty = "n", axes = FALSE,
xlab = "", ylab = "", main = "")
text(x = -.1, y = 0.65, "RASCHplot", srt=45, cex = 3)
text(x = -.3, y = 0.65, "RASCHplot", srt=45, cex = 3)
plotICC(res_rm_1, item.subset = "S2WantShout", bty = "n", axes = FALSE,
xlab = "", ylab = "", main = "")
text(x = -.4, y = 0.6, "RASCHplot", srt=45, cex = 3)
plotICC(res_rm_1, item.subset = "S2WantShout", bty = "n", axes = FALSE,
xlab = "", ylab = "", main = "")
text(x = -.6, y = 0.58, "RASCHplot", srt=45, cex = 3)
pdf("/home/ann-sophie/wip/pa2122/karl/raschplots/ggp.pdf", family = "Courier")
plotICC(res_rm_1, item.subset = "S2WantShout", bty = "n", axes = FALSE,
xlab = "", ylab = "", main = "")
text(x = -.6, y = 0.58, "RASCHplot", srt=45, cex = 3)
dev.off()
?plot
plotICC(res_rm_1, item.subset = "S2WantShout", bty = "n", axes = FALSE,
xlab = "", ylab = "", main = "", asp = 1)
text(x = -.6, y = 0.58, "RASCHplot", srt=45, cex = 3)
plotICC(res_rm_1, item.subset = "S2WantShout", bty = "n", axes = FALSE,
xlab = "", ylab = "", main = "", asp = .5)
plotICC(res_rm_1, item.subset = "S2WantShout", bty = "n", axes = FALSE,
xlab = "", ylab = "", main = "", asp = 8)
pdf("/home/ann-sophie/wip/pa2122/karl/raschplots/ggp.pdf", family = "Courier")
plotICC(res_rm_1, item.subset = "S2WantShout", bty = "n", axes = FALSE,
xlab = "", ylab = "", main = "", asp = 8)
text(x = -.6, y = 0.58, "RASCHplot", srt=45, cex = 3)
dev.off()
pdf("/home/ann-sophie/wip/pa2122/karl/raschplots/ggp.pdf", family = "Courier")
plotICC(res_rm_1, item.subset = "S2WantShout", bty = "n", axes = FALSE,
xlab = "", ylab = "", main = "", asp = 6)
text(x = -.6, y = 0.58, "RASCHplot", srt=45, cex = 3)
dev.off()
par(mar = c(0,0,0,0))
plotICC(res_rm_1, item.subset = "S2WantShout", bty = "n", axes = FALSE,
xlab = "", ylab = "", main = "", asp = 6)
text(x = -.6, y = 0.58, "RASCHplot", srt=45, cex = 3)
par(mar = c(0,0,0,0))
pdf("/home/ann-sophie/wip/pa2122/karl/raschplots/ggp.pdf", family = "Courier")
plotICC(res_rm_1, item.subset = "S2WantShout", bty = "n", axes = FALSE,
xlab = "", ylab = "", main = "", asp = 6)
text(x = -.6, y = 0.58, "RASCHplot", srt=50, cex = 3)
dev.off()
par(mar = c(0,0,0,0))
pdf("/home/ann-sophie/wip/pa2122/karl/raschplots/ggp.pdf", family = "Courier")
par(mar = c(0,0,0,0))
plotICC(res_rm_1, item.subset = "S2WantShout", bty = "n", axes = FALSE,
xlab = "", ylab = "", main = "", asp = 6)
text(x = -.6, y = 0.58, "RASCHplot", srt=50, cex = 3)
dev.off()
?pdf
pdf("/home/ann-sophie/wip/pa2122/karl/raschplots/ggp.pdf", family = "Courier",
width = 5, height = 5)
plotICC(res_rm_1, item.subset = "S2WantShout", bty = "n", axes = FALSE,
xlab = "", ylab = "", main = "", asp = 6)
text(x = -.6, y = 0.58, "RASCHplot", srt=55, cex = 3)
dev.off()
?plotICC
par(mar = c(0,0,0,0))
pdf("/home/ann-sophie/wip/pa2122/karl/raschplots/ggp.pdf", family = "Courier",
width = 5, height = 5)
plotICC(res_rm_1, item.subset = "S2WantShout", bty = "n", axes = FALSE,
xlab = "", ylab = "", main = "", asp = 6)
text(x = -.6, y = 0.58, "RASCHplot", srt=55, cex = 3)
dev.off()
par(mar = c(0,0,0,0))
pdf("/home/ann-sophie/wip/pa2122/karl/raschplots/ggp.pdf", family = "Courier",
width = 5, height = 5)
plotICC(res_rm_1, item.subset = "S2WantShout", bty = "n", axes = FALSE,
xlab = "", ylab = "", main = "", asp = 6)
text(x = -.6, y = 0.58, "RASCHplot", srt=50, cex = 3)
dev.off()
devtools::document()
devtools::document()
library(RASCHplot)
devtools::document()
devtools::document()
devtools::document()
library(RASCHplot)
?CICCplot
library(RASCHplot)
?CICCplot
data(SPADI)
SPADI.complete <- SPADI[complete.cases(SPADI), ]
it.SPADI <- SPADI.complete[, 9:16]
model.SPADI <- eRm::PCM(it.SPADI)
library(haven)
path <- file.path("/home/ann-sophie/wip/pa2122/jorgen/fsvstat/e22/220913/fysforh.sav")
dataset <- read_sav(path)
df <- dataset %>%
rowwise() %>%
mutate(TotalScore = sum(c_across(Itema:Itemk))) %>%
mutate(TotalScoreFact = as.factor(TotalScore)) %>%
mutate(across(12:15, as.factor))
library(tidyverse)
df <- dataset %>%
rowwise() %>%
mutate(TotalScore = sum(c_across(Itema:Itemk))) %>%
mutate(TotalScoreFact = as.factor(TotalScore)) %>%
mutate(across(12:15, as.factor))
fita <- glm(Itema ~ Byggeår + Køn + AlderKat + Skolestr + TotalScoreFact, data = df)
pvals <- data.frame(pvals.a = summary(fita)$coefficients[2:8 ,"Pr(>|t|)"])
fitb <- glm(Itemb ~ Byggeår + Køn + AlderKat + Skolestr + TotalScoreFact, data = df)
pvals$pvals.b <- summary(fitb)$coefficients[2:8 ,"Pr(>|t|)"]
fitc <- glm(Itemc ~ Byggeår + Køn + AlderKat + Skolestr + TotalScoreFact, data = df)
pvals$pvals.c <- summary(fitc)$coefficients[2:8 ,"Pr(>|t|)"]
fitd <- glm(Itemd ~ Byggeår + Køn + AlderKat + Skolestr + TotalScoreFact, data = df)
pvals$pvals.d <- summary(fitd)$coefficients[2:8 ,"Pr(>|t|)"]
fite <- glm(Iteme ~ Byggeår + Køn + AlderKat + Skolestr + TotalScoreFact, data = df)
pvals$pvals.e <- summary(fite)$coefficients[2:8 ,"Pr(>|t|)"]
fitf <- glm(Itemf ~ Byggeår + Køn + AlderKat + Skolestr + TotalScoreFact, data = df)
pvals$pvals.f <- summary(fitf)$coefficients[2:8 ,"Pr(>|t|)"]
fitg <- glm(Itemg ~ Byggeår + Køn + AlderKat + Skolestr + TotalScoreFact, data = df)
pvals$pvals.g <- summary(fitg)$coefficients[2:8 ,"Pr(>|t|)"]
fith <- glm(Itemh ~ Byggeår + Køn + AlderKat + Skolestr + TotalScoreFact, data = df)
pvals$pvals.h <- summary(fith)$coefficients[2:8 ,"Pr(>|t|)"]
fiti <- glm(Itemi ~ Byggeår + Køn + AlderKat + Skolestr + TotalScoreFact, data = df)
pvals$pvals.i <- summary(fiti)$coefficients[2:8 ,"Pr(>|t|)"]
fitj <- glm(Itemj ~ Byggeår + Køn + AlderKat + Skolestr + TotalScoreFact, data = df)
pvals$pvals.j <- summary(fitj)$coefficients[2:8 ,"Pr(>|t|)"]
fitk <- glm(Itemk ~ Byggeår + Køn + AlderKat + Skolestr + TotalScoreFact, data = df)
pvals$pvals.k <- summary(fitk)$coefficients[2:8 ,"Pr(>|t|)"]
colnames(pvals)[which(pvals == min(pvals), arr.ind = TRUE)[2]]
pvals
summary(fita)
summary(fitd)
?anova
anova(fitb, fitb2)
fitb2 <- glm(Itemb ~ Byggeår + Køn + AlderKat + TotalScoreFact, data = df)
anova(fitb, fitb2)
lrtest(fitb, fitb2)
lmtest::lrtest(fitb, fitb2)
fitd <- glm(Itemd ~ Byggeår + Køn + AlderKat + Skolestr + TotalScoreFact, data = df)
fitd2 <- glm(Itemd ~ Byggeår + Køn + AlderKat + TotalScoreFact, data = df)
lmtest::lrtest(fitd, fitd2)
mdscore::wald.test(fitd, fitd2)
aod::wald.test(fitd, fitd2)
anova(fitd)
anova(fitd, test = "Chisq")
install.packages("aod")
install.packages("aod")
library(aod)
wald.test(fitd)
?wald.test
wald.test(fitd, Terms = 4)
wald.test(b = coef(fitd), Sigma = vcov(fitd), Terms = 4)
wald.test(b = coef(fitd), Sigma = vcov(fitd))
wald.test(b = coef(fitd), Sigma = vcov(fitd), Terms = 1)
wald.test(b = coef(fitd), Sigma = vcov(fitd), Terms = 2)
wald.test(b = coef(fitd), Sigma = vcov(fitd), Terms = 3)
wald.test(b = coef(fitd), Sigma = vcov(fitd), Terms = 4)
wald.test(b = coef(fitd), Sigma = vcov(fitd), Terms = 5)
