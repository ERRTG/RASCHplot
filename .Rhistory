}
#}
}
}
data_obs <- lapply(1:nlevstrat, function(j) {
df <- data.frame(Tot.val_grp = Tot.val_grp[[j]],
obs.val_grp = obs.val_grp[[j]],
var.val_grp = var.val_grp[[j]],
n.val_grp = n.val_grp[[j]],
CI.bound = NA,
strat.var = levstrat[j])
df <- df[df$n.val_grp != 0, ]
if (error.bar) {
df$CI.bound <- 1.96*sqrt(df[,"var.val_grp"]/df[,"n.val_grp"])
}
df
})
itmtit <- colnames(data)[itm]
data_obs_long <- do.call(rbind, data_obs)
cidx <- 1:(nlevels(as.factor(data_obs_long$strat.var)) + 1)
col <- c("darkgrey", "#E69F00", "#56B4E9", "#009E73", "#F0E442",
"#0072B2", "#D55E00", "#CC79A7")[cidx]
names(col) <- c("Expected", levels(as.factor(data_obs_long$strat.var)))
pp[[plotidx]][[l]] <- difplot(data_exp, Tot.val, exp.val, data_obs_long, itmtit, stratname, dodge.width, point.size, line.size, line.type, errorbar.width, errorbar.size, ...)
}
plotidx <- plotidx + 1
}
library(RASCHplot)
library(RASCHplot)
shiny::runApp('inst/apps/RMDitemfit')
library(RASCHplot)
runApp('inst/apps/RMDitemfit')
runApp('inst/apps/RMPitemfit')
runApp('inst/apps/RMDitemfit')
library(RASCHplot)
devtools::document()
library(RASCHplot)
library(RASCHplot)
shiny::runApp('inst/apps/RMPitemfit')
library(RASCHplot)
library(eRm)
data(SPADI)
SPADI.complete <- SPADI[complete.cases(SPADI), ]
it.SPADI <- SPADI.complete[, 9:16]
model.SPADI <- eRm::PCM(it.SPADI)
strat.vars <- list(gender = SPADI.complete[, "gender"])
DIFplot(model = model.SPADI, strat.vars = strat.vars)
library(RASCHplot)
DIFplot(model = model.SPADI, strat.vars = strat.vars)
devtools::document()
library(RASCHplot)
DIFplot(model = model.SPADI, strat.vars = strat.vars)
library(RASCHplot)
library(RASCHplot)
devtools::document()
library(RASCHplot)
DIFplot(model = model.SPADI, strat.vars = strat.vars)
library(RASCHplot)
library(RASCHplot)
devtools::document()
library(RASCHplot)
library(iarm)
it.AMTS <- amts[,4:13]
it.AMTSc <- it.AMTS[complete.cases(it.AMTS), ]
idx <- which(rowSums(it.AMTSc) %in% c(0,ncol(it.AMTSc)))
dat <- it.AMTSc[-idx,]
fit <- eRm::PCM(dat, sum0 = TRUE)
pres.pcm <- eRm::person.parameter(fit)
eRm::itemfit(pres.pcm)
fit <- RASCHfits(method.item = "PCML",
method.person = "WML",
dat = dat)
beta <- fit$beta
theta <- fit$theta
tmp <- simRASCHstats(beta, theta, method.item = "JML", method.person = "MML", B = 10, model = "RMD", trace.it = 1)
tmp <- simRASCHstats(beta, theta, method.item = "JML", method.person = "MLE", B = 10, model = "RMD", trace.it = 1)
stats <- RASCHstats(beta, theta, dat)
outfits <- data.frame(x = stats$Outfit,
y = rep(0, length(stats$Outfit)))
outfits
eRm::itemfit(pres.pcm)
names(pres.pcm)
betaeRm <- pres.pcm$betapar
thetaeRm <- pres.pcm$thetapar
betaeRm
beta
fit <- RASCHfits(method.item = "JML",
method.person = "MLE",
dat = dat)
beta <- fit$beta
theta <- fit$theta
beta
betaeRm
betaeRm <- -pres.pcm$betapar
betaeRm
beta
tmp <- simRASCHstats(beta, theta, method.item = "JML", method.person = "MLE", B = 10, model = "RMD", trace.it = 1)
stats <- RASCHstats(beta, theta, dat)
outfits <- data.frame(x = stats$Outfit,
y = rep(0, length(stats$Outfit)))
outfits
eRm::itemfit(pres.pcm)
it.SPADI <- SPADI
it.SPADIc <- it.SPADI[complete.cases(it.SPADI), ]
idx <- which(rowSums(it.SPADIc) %in% c(0,ncol(it.SPADIc)))
dat <- it.SPADIc[-idx,]
fit <- eRm::PCM(dat, sum0 = TRUE)
dat
it.SPADI <- SPADI[,-c(1,2)]
it.SPADIc <- it.SPADI[complete.cases(it.SPADI), ]
idx <- which(rowSums(it.SPADIc) %in% c(0,ncol(it.SPADIc)))
dat <- it.SPADIc[-idx,]
fit <- eRm::PCM(dat, sum0 = TRUE)
fit <- eRm::RM(dat, sum0 = TRUE)
pres.pcm <- eRm::person.parameter(fit)
eRm::itemfit(pres.pcm)
betaeRm <- -pres.pcm$betapar
thetaeRm <- pres.pcm$thetapar
fit <- RASCHfits(method.item = "JML",
method.person = "MLE",
dat = dat)
beta <- fit$beta
theta <- fit$theta
beta
betaeRm
dat
it.SPADI <- SPADI[,-c(1,2)]
it.SPADI
it.SPADIc <- it.SPADI[complete.cases(it.SPADI), ]
it.SPADIc
idx <- which(rowSums(it.SPADIc) %in% c(0,ncol(it.SPADIc)))
idx
dat <- it.SPADIc
fit <- eRm::PCM(dat, sum0 = TRUE)
it.SPADI <- SPADI[,-c(1,2,3)]
it.SPADIc <- it.SPADI[complete.cases(it.SPADI), ]
idx <- which(rowSums(it.SPADIc) %in% c(0,ncol(it.SPADIc)))
dat <- it.SPADIc
fit <- eRm::PCM(dat, sum0 = TRUE)
pres.pcm <- eRm::person.parameter(fit)
eRm::itemfit(pres.pcm)
betaeRm <- -pres.pcm$betapar
thetaeRm <- pres.pcm$thetapar
betaeRm
fit <- RASCHfits(method.item = "JML",
method.person = "MLE",
dat = dat)
beta <- fit$beta
theta <- fit$theta
betaeRm
beta
fit <- eRm::PCM(dat)
pres.pcm <- eRm::person.parameter(fit)
eRm::itemfit(pres.pcm)
betaeRm <- -pres.pcm$betapar
thetaeRm <- pres.pcm$thetapar
betaeRm
tmp <- simRASCHstats(beta, theta, method.item = "JML", method.person = "MLE", B = 10, model = "RMD", trace.it = 1)
stats <- RASCHstats(beta, theta, dat)
outfits <- data.frame(x = stats$Outfit,
y = rep(0, length(stats$Outfit)))
tmp <- simRASCHstats(beta, theta, method.item = "JML", method.person = "MLE", B = 10, model = "RMP", trace.it = 1)
beta
tmp <- simRASCHstats(betaeRm, theta, method.item = "JML", method.person = "MLE", B = 10, model = "RMP", trace.it = 1)
tmp <- simRASCHstats(beta, theta, method.item = "JML", method.person = "MLE", B = 10, model = "RMP", trace.it = 1)
beta
?sirt::rasch.pairwise
library(RASCHplot)
library(RASCHplot)
data(SPADI)
dat <- droplevels(SPADI)
dat <- dat[complete.cases(dat), ]
itmsP <- dat[ ,4:8]
itmsD <- dat[ ,9:16]
?runApp
?runApp
?switch
library(RASCHplot)
library(RASCHplot)
library(RASCHplot)
library(RASCHplot)
devtools::document()
library(RASCHplot)
library(RASCHplot)
devtools::document()
devtools::document()
devtools::document()
?pageWithSidebar
devtools::document()
rlang::last_error()
?pkgload:::source_many
?pkgload::load_all
devtools::document()
library(RASCHplot)
devtools::document()
library(RASCHplot)
devtools::document()
library(RASCHplot)
?shinyServer
library(RASCHplot)
library(RASCHplot)
devtools::document()
library(RASCHplot)
library(RASCHplot)
library(RASCHplot)
library(RASCHplot)
library(RASCHplot)
devtools::document()
library(RASCHplot)
library(RASCHplot)
devtools::document()
devtools::document()
library(RASCHplot)
devtools::document()
devtools::document()
library(RASCHplot)
library(RASCHplot)
library(RASCHplot)
?system.file
system.file(paste0("apps/", "RMDitemfit"), package = "RASCHplot")
library(RASCHplot)
library(RASCHplot)
appDir <- system.file(paste0("apps/", name), package = "RASCHplot")
name = "RMDitemfit"
appDir <- system.file(paste0("apps/", name), package = "RASCHplot")
#if (appDir == "") stop("The shiny app ", name, " does not exist")
#shiny::runApp(appDir, ...)
source(paste0(appDir, "server.R"))
appDir <- system.file(paste0("apps/", name, "/"), package = "RASCHplot")
#if (appDir == "") stop("The shiny app ", name, " does not exist")
#shiny::runApp(appDir, ...)
source(paste0(appDir, "server.R"))
library(RASCHplot)
library(RASCHplot)
devtools::document()
library(RASCHplot)
library(RASCHplot)
devtools::document()
library(RASCHplot)
library(RASCHplot)
library(RASCHplot)
devtools::document()
library(RASCHplot)
library(RASCHplot)
devtools::document()
library(RASCHplot)
devtools::document()
rm(list = c("RMDserver"))
devtools::document()
library(RASCHplot)
library(RASCHplot)
library(RASCHplot)
library(RASCHplot)
library(RASCHplot)
devtools::document()
library(RASCHplot)
devtools::document()
library(RASCHplot)
capture.output(RMDserver)
devtools::document()
library(RASCHplot)
library(RASCHplot)
RMDui()
capture.output(RMDui)
library(RASCHplot)
library(RASCHplot)
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
library(RASCHplot)
library(RASCHplot)
library(RASCHplot)
library(RASCHplot)
?runif
runif(min=0, max = 1)
devtools::document()
library(RASCHplot)
library(RASCHplot)
devtools::document()
library(RASCHplot)
library(RASCHplot)
library(RASCHplot)
library(RASCHplot)
library(iarm)
it.AMTS <- amts[,4:13]
it.AMTSc <- it.AMTS[complete.cases(it.AMTS), ]
idx <- which(rowSums(it.AMTSc) %in% c(0,ncol(it.AMTSc)))
dat <- it.AMTSc[-idx,]
betaeRm <- -pres.pcm$betapar
thetaeRm <- pres.pcm$thetapar
fit <- RASCHfits(method.item = "JML",
method.person = "MLE",
dat = dat)
beta <- fit$beta
theta <- fit$theta
beta
stats <- RASCHstats(beta, theta, dat)
library(RASCHplot)
devtools::document()
library(RASCHplot)
library(RASCHplot)
devtools::document()
devtools::document()
library(RASCHplot)
devtools::document()
library(RASCHplot)
library(RASCHplot)
devtools::document()
library(RASCHplot)
library(RASCHplot)
library(RASCHplot)
RASCHstats()
RASCHstats
library(RASCHplot)
RASCHstats
citation("eRm")
devtools::document()
.S3PrimitiveGenerics
?InternalMethods
devtools::document()
devtools::document()
library(RASCHplot)
citation("ggplot2")
theta <- read.csv("/home/ann-sophie/wip/pa2122/karl/inoutshiny/Knox_pp.csv")$theta
beta <- read.csv("/home/ann-sophie/wip/pa2122/karl/inoutshiny/Knox_ip.csv")$beta
method.item = c("PCML")
method.person = c("WML")
B=10
model = c("RMD")
trace.it = 0
(model == "RMP")
N <- length(theta)
K <- length(beta)
#-------------------- Compute probabilities ----------------------------
probs <- sapply(1:K, function(ii) irffct(theta = theta, b = beta, ii)[, 2])
#'
#' Item response function
#'
#' @param b Vector or matrix of item parameters.
#' @param theta Vector of person parameters.
#' @param ii item index
#'
#' @noRd
irffct <- function(theta, b, ii){
eta <- exp(theta - b[ii])
pbs <- eta / (1 + eta)
pbs <- cbind(1 - pbs, pbs)
return(pbs)
}
#' PCM function
#'
#' @param b Vector or matrix of item parameters.
#' @param theta Vector of person parameters.
#' @param ii item index
#'
#' @noRd
pcmfct <- function(theta, b, ii){
N <- length(theta)  # number of persons
M <- nrow(b)        # max number of categories - 1 for items
beta0 <- 0# - sum(beta[, i]) #
matb <- matrix(c(beta0, b[, ii]), nrow = N, ncol = M+1, byrow = TRUE)
matx <- matrix(0:M, nrow = N, ncol = M+1, byrow = TRUE)
eta <- exp(theta * matx - matb)
pbs <- eta / rowSums(eta, na.rm=TRUE)
return(pbs)
}
#-------------------- Compute probabilities ----------------------------
probs <- sapply(1:K, function(ii) irffct(theta = theta, b = beta, ii)[, 2])
#------------- Simulate item responses (0/1) -----------------------
X <- simResps(model = "RMD", probs, B)
probs
beta
library(RASCHplot)
library(RASCHplot)
library(RASCHplot)
library(RASCHplot)
library(RASCHplot)
?save
setwd("~/wip/pa2122/karl/inoutshiny")
colpal <- c("#CFCFC2", "#95DA4C", "#3F8058", "#2980B9", "#F67400", "#7F8C8D", "#FDBC4B", "#3DAEE9", "#27AEAE", "#7A7C7D", "#7F8C8D", "#A43340", "#2980B9", "#F67400", "#DA4453", "#0099FF", "#F67400", "#8E44AD", "#27AE60", "#C45B00", "#CFCFC2", "#CFCFC2", "#27AE60", "#27AE60", "#2980B9", "#3DAEE9", "#DA4453", "#F44F4F", "#27AEAE", "#DA4453", "#DA4453")
library(ggplot2); library(readr)
#============================= AMTS ============================================
#install.packages("iarm")
library(iarm)
data(amts)
#install.packages("devtools")
#devtools::install_github("ERRTG/RASCHplot")
library(RASCHplot)
it.AMTS <- amts[,4:13]
it.AMTSc <- it.AMTS[complete.cases(it.AMTS), ]
idx <- which(rowSums(it.AMTSc) %in% c(0,ncol(it.AMTSc)))
dat <- it.AMTSc[-idx,]
fit <- RASCHfits(method.item = "PCML",
method.person = "WML",
dat = dat)
beta <- fit$beta
theta <- fit$theta
#names(beta) <- colnames(amts)[4:13]
stats <- RASCHstats(beta, theta, dat)
outfits <- data.frame(x = stats$Outfit,
y = rep(0, length(stats$Outfit)))
write_csv(data.frame(beta = beta), 'amtsbeta.csv')
write_csv(data.frame(theta = theta), 'amtstheta.csv')
write_csv(data.frame(outfit = stats$Outfit), 'amtsoutfit.csv')
beta  <- read_csv("amtsbeta.csv")$beta
theta <- read_csv("amtstheta.csv")$theta
x <- simRASCHstats(beta, theta,
method.item = "PCML",
method.person = "WML",
B = 1000)
save(x, file = "amtsstats.RData")
my_colors <- colpal[c(12, 28, 1)]
names(my_colors) <- c("2.5%", "5%", "other")
theme_set(theme_minimal() + theme(legend.title = element_blank(),
plot.title = element_text(size = 8, hjust = 0.5),
text = element_text(size = 8)))
plot(x)
library(RASCHplot)
plot(x)
library(RASCHplot)
plot(x)
theme_set(theme_minimal() + theme(legend.title = element_blank(),
plot.title = element_text(size = 8, hjust = 0.5),
text = element_text(size = 8)))
plot(x)
?geom_ribbon
library(RASCHplot)
theme_set(theme_minimal() + theme(legend.title = element_blank(),
plot.title = element_text(size = 8, hjust = 0.5),
text = element_text(size = 8)))
plot(x)
library(RASCHplot)
theme_set(theme_minimal() + theme(legend.title = element_blank(),
plot.title = element_text(size = 8, hjust = 0.5),
text = element_text(size = 8)))
plot(x)
plot(x, col.outline = "red")
my_colors <- colpal[c(12, 28, 1)]
names(my_colors) <- c("2.5%", "5%", "other")
theme_set(theme_minimal() + theme(legend.title = element_blank(),
plot.title = element_text(size = 8, hjust = 0.5),
text = element_text(size = 8)))
plot(x)
p1 <- plot(x, colours = my_colors, title = "")
ggsave("amtsOutfitMin.pdf", plot = p1, width = 11, height = 8, units = "cm")
p2 <- plot(x, extreme = "max", colours = my_colors, title = "")
ggsave("amtsOutfitMax.pdf", plot = p2, width = 11, height = 8, units = "cm")
ggpubr::ggarrange(p1, p2, legend = "bottom", common.legend = TRUE)
ggsave("amtsOutfit.pdf", width = 11, height = 8, units = "cm")
p3 <- plot(x, type = "Infit", colours = my_colors, title = "")
ggsave("amtsInfitMin.pdf", plot = p3, width = 11, height = 8, units = "cm")
p4 <- plot(x, type = "Infit", extreme = "max", colours = my_colors, title = "")
ggsave("amtsInfitMax.pdf", plot = p4, width = 11, height = 8, units = "cm")
ggpubr::ggarrange(p3, p4, legend = "bottom", common.legend = TRUE)
ggsave("amtsInfit.pdf", width = 11, height = 8, units = "cm")
colpal <- c("#CFCFC2", "#95DA4C", "#3F8058", "#2980B9", "#F67400", "#7F8C8D", "#FDBC4B", "#3DAEE9", "#27AEAE", "#7A7C7D", "#7F8C8D", "#A43340", "#2980B9", "#F67400", "#DA4453", "#0099FF", "#F67400", "#8E44AD", "#27AE60", "#C45B00", "#CFCFC2", "#CFCFC2", "#27AE60", "#27AE60", "#2980B9", "#3DAEE9", "#DA4453", "#F44F4F", "#27AEAE", "#DA4453", "#DA4453")
library(ggplot2)
#============================= AMTS ============================================
#install.packages("devtools")
#devtools::install_github("ERRTG/RASCHplot")
library(RASCHplot)
library(pairwise)
data(KCT)
dim(KCT)
novar <- which(apply(KCT, 2, function(x) var(x) == 0))
dat <- KCT[, -novar]
test <- which(rowSums(dat) %in% c(0,ncol(dat)))
dat <- dat[-test, ]
novar <- which(apply(dat, 2, function(x) var(x) == 0))
fit <- RASCHfits(method.item = "PCML",
method.person = "WML",
dat = dat)
beta <- fit$beta
theta <- fit$theta
#names(beta) <- colnames(amts)[4:13]
stats <- RASCHstats(beta, theta, dat)
outfits <- data.frame(x = stats$Outfit,
y = rep(0, length(stats$Outfit)))
theta <- read.csv("Knox_pp.csv")[,1]
beta <- read.csv("Knox_ip.csv")[,1]
x <- simRASCHstats(beta, theta,
method.item = "PCML",
method.person = "WML",
B = 1000)
save(x, file = "knoxstats.RData")
my_colors <- colpal[c(12, 28, 1)]
names(my_colors) <- c("2.5%", "5%", "other")
theme_set(theme_minimal() + theme(legend.title = element_blank(),
plot.title = element_text(size = 8, hjust = 0.5),
text = element_text(size = 8)))
plot(x, type = "FitResid")
p1 <- plot(x, type = "FitResid", colours = my_colors, title = "")
ggsave("knoxFitResidMin.pdf", width = 11, height = 8, units = "cm")
p2 <- plot(x, type = "FitResid", extreme = "max", colours = my_colors, title = "") #+
ggsave("knoxFitResidMax.pdf", width = 11, height = 8, units = "cm")
ggpubr::ggarrange(p1, p2, legend = "bottom", common.legend = TRUE)
ggsave("knoxFitResid.pdf", width = 11, height = 8, units = "cm")
my_colors
library(RASCHplot)
plot(x, type = "FitResid")
library(RASCHplot)
library(RASCHplot)
