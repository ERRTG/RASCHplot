if (is.null(strat.var)) {
pp <- ggplot(remove_missing(longdf, na.rm = TRUE),
aes(x = item, y = y, fill = Score, na.rm = TRUE))
} else {
pp <- ggplot(remove_missing(longdf, na.rm = TRUE),
aes(x = strat.var, y = y, fill = Score, na.rm = TRUE)) +
facet_grid(rows = vars(item))
}
} else {
if (is.null(strat.var)) {
pp <- ggplot(longdf, aes(x = item, y = y, fill = Score))
} else {
pp <- ggplot(longdf, aes(x = strat.var, y = y, fill = Score))+
facet_grid(rows = vars(item))
}
}
pp <- pp +
geom_bar(stat = "identity") +
xlab(ifelse(nlevels(longdf$item) > 1, "Item", "")) +
ylab(ifelse(freq, "Count", "Percentage")) +
coord_flip() +
theme(legend.position="bottom")  +
guides(fill = guide_legend(nrow = 1, reverse = TRUE))
if (addsums) {
pp <- pp +
geom_text(stat = "identity",
aes(label = round(y, ifelse(freq, 0, 1)), y = y),
position = position_stack(0.5))
}
pp
}
barplt(longdf, addsums, na.action, strat.var)
#' Internal BAR plot function for percentage
#' @param longdf longdf
#' @param addsums addsums
#' @param na.action na.action
#' @param strat.var strat.var
#' @noRd
barplt <- function(longdf, addsums, na.action, strat.var = NULL) {
if (na.action %in% c("na.rm", "na.report")) {
if (is.null(strat.var)) {
pp <- ggplot(remove_missing(longdf, na.rm = TRUE),
aes(x = item, y = y, fill = Score, na.rm = TRUE))
} else {
pp <- ggplot(remove_missing(longdf, na.rm = TRUE),
aes(x = strat.var, y = y, fill = Score, na.rm = TRUE)) +
facet_grid(rows = vars(item), switch = "y")
}
} else {
if (is.null(strat.var)) {
pp <- ggplot(longdf, aes(x = item, y = y, fill = Score))
} else {
pp <- ggplot(longdf, aes(x = strat.var, y = y, fill = Score))+
facet_grid(rows = vars(item), switch = "y")
}
}
pp <- pp +
geom_bar(stat = "identity") +
xlab(ifelse(nlevels(longdf$item) > 1, "Item", "")) +
ylab(ifelse(freq, "Count", "Percentage")) +
coord_flip() +
theme(legend.position="bottom")  +
guides(fill = guide_legend(nrow = 1, reverse = TRUE))
if (addsums) {
pp <- pp +
geom_text(stat = "identity",
aes(label = round(y, ifelse(freq, 0, 1)), y = y),
position = position_stack(0.5))
}
pp
}
barplt(longdf, addsums, na.action, strat.var)
#' Internal BAR plot function for percentage
#' @param longdf longdf
#' @param addsums addsums
#' @param na.action na.action
#' @param strat.var strat.var
#' @noRd
barplt <- function(longdf, addsums, na.action, strat.var = NULL) {
if (na.action %in% c("na.rm", "na.report")) {
if (is.null(strat.var)) {
pp <- ggplot(remove_missing(longdf, na.rm = TRUE),
aes(x = item, y = y, fill = Score, na.rm = TRUE))
} else {
pp <- ggplot(remove_missing(longdf, na.rm = TRUE),
aes(x = strat.var, y = y, fill = Score, na.rm = TRUE)) +
facet_grid(rows = vars(item), switch = "y") +
theme(strip.placement = "outside")
}
} else {
if (is.null(strat.var)) {
pp <- ggplot(longdf, aes(x = item, y = y, fill = Score))
} else {
pp <- ggplot(longdf, aes(x = strat.var, y = y, fill = Score))+
facet_grid(rows = vars(item), switch = "y") +
theme(strip.placement = "outside")
}
}
pp <- pp +
geom_bar(stat = "identity") +
xlab(ifelse(nlevels(longdf$item) > 1, "Item", "")) +
ylab(ifelse(freq, "Count", "Percentage")) +
coord_flip() +
theme(legend.position="bottom")  +
guides(fill = guide_legend(nrow = 1, reverse = TRUE))
if (addsums) {
pp <- pp +
geom_text(stat = "identity",
aes(label = round(y, ifelse(freq, 0, 1)), y = y),
position = position_stack(0.5))
}
pp
}
barplt(longdf, addsums, na.action, strat.var)
theme_set(theme_minimal())
barplt(longdf, addsums, na.action, strat.var)
which.item = 1
longdf <- longdffct(df, which.item, freq, strat.var)
longdf
dfs <- data.frame(df, strat.var = strat.var)
dfs
df
dfs <- data.frame(df, strat.var = strat.var)
dfs %>%
dplyr::select(c(all_of(which.item), strat.var))
dfs %>%
dplyr::select(c(all_of(which.item), strat.var)) %>%
dplyr::mutate_at(c(which.item), factor) %>%
dplyr::count(across(all_of(which.item)))
dfs %>%
dplyr::select(c(all_of(which.item), strat.var)) %>%
dplyr::mutate_at(c(which.item), factor) %>%
dplyr::count(across(c(all_of(which.item), strat.var)))
dfs %>%
dplyr::select(c(all_of(which.item), strat.var)) %>%
dplyr::mutate_at(c(which.item), factor) %>%
dplyr::count(across(c(all_of(which.item), strat.var))) %>%
dplyr::mutate(q = n/sum(n) * 100)
dfs %>%
dplyr::select(c(all_of(which.item), strat.var)) %>%
dplyr::mutate_at(c(which.item), factor) %>%
dplyr::count(across(c(all_of(which.item), strat.var))) %>%
dplyr::mutate(q = n/sum(n) * 100)  %>%
dplyr::mutate(item = colnames(df)[which.item])
dfs %>%
dplyr::select(c(all_of(which.item), strat.var)) %>%
dplyr::mutate_at(c(which.item), factor) %>%
dplyr::count(across(c(all_of(which.item), strat.var))) %>%
dplyr::mutate(q = n/sum(n) * 100)  %>%
dplyr::mutate(item = colnames(df)[which.item]) %>%
dplyr::rename_with(.cols = 1, ~"Score")
dfs %>%
dplyr::select(c(all_of(which.item), strat.var)) %>%
dplyr::mutate_at(c(which.item), factor) %>%
dplyr::count(across(c(all_of(which.item), strat.var))) %>%
dplyr::mutate(q = n/sum(n) * 100)  %>%
dplyr::mutate(item = colnames(df)[which.item]) %>%
dplyr::rename_with(.cols = 1, ~"Score") %>%
dplyr::mutate(Score =forcats::fct_rev(Score))
longdf <- longdffct(df, which.item, freq, strat.var)
barplt(longdf, addsums, na.action, strat.var)
longdf
#' Internal data generating function
#' @param df df
#' @param which.item which.item
#' @param freq freq
#' @noRd
longdffct <- function(df, which.item, freq, strat.var = NULL) {
if(any(is.numeric(which.item)) & length(which.item) == 1) {
if(is.null(strat.var)) {
longdf <- df %>%
dplyr::select(all_of(which.item)) %>%
dplyr::mutate_at(c(which.item), factor) %>%
dplyr::count(across(all_of(which.item))) %>%
dplyr::mutate(q = n/sum(n) * 100)  %>%
dplyr::mutate(item = colnames(df)[which.item]) %>%
dplyr::rename_with(.cols = 1, ~"Score")
} else {
dfs <- data.frame(df, strat.var = strat.var)
longdf <- dfs %>%
dplyr::select(c(all_of(which.item), strat.var)) %>%
dplyr::mutate_at(c(which.item), factor) %>%
dplyr::count(across(c(all_of(which.item), strat.var))) %>%
dplyr::mutate(q = n/sum(n) * 100)  %>%
dplyr::mutate(item = colnames(df)[which.item]) %>%
dplyr::rename_with(.cols = 1, ~"Score")
}
} else {
if (all(which.item == "all")) {
which.item <- 1:ncol(df)
}
if(is.null(strat.var)) {
longdf <- df %>%
dplyr::select(all_of(which.item)) %>%
tidyr::pivot_longer(any_of(which.item), names_to = "item", values_to = "Score") %>%
dplyr::mutate(Score = as.factor(Score)) %>%
dplyr::mutate(Score = forcats::fct_rev(Score))%>%
dplyr::count(item, Score) %>%
dplyr::group_by(item) %>%
dplyr::mutate(q = n/sum(n) * 100)
} else {
dfs <- data.frame(df, strat.var = strat.var)
longdf <- dfs %>%
dplyr::select(c(all_of(which.item), strat.var)) %>%
tidyr::pivot_longer(any_of(which.item), names_to = "item", values_to = "Score") %>%
dplyr::mutate(Score = as.factor(Score)) %>%
dplyr::mutate(Score = forcats::fct_rev(Score))%>%
dplyr::count(item, strat.var, Score) %>%
dplyr::group_by(item, strat.var) %>%
dplyr::mutate(q = n/sum(n) * 100)
}
}
longdf <- if(freq){
dplyr::rename(longdf, y = n)
} else {
dplyr::rename(longdf, y = q)
}
longdf
}
longdf <- longdffct(df, which.item, freq, strat.var)
barplt(longdf, addsums, na.action, strat.var)
?strip.placement
library(RASCHplot)
theme_set(theme_minimal())
BARplot(data = it.AMTS)
BARplot(data = it.AMTS, which.item = 1)
BARplot(data = it.AMTS, addsums = TRUE)
BARplot(data = it.AMTS, na.action = "na.rm")
BARplot(data = it.AMTS, freq = FALSE)
BARplot(data = it.AMTS)
BARplot(data = it.AMTS, which.item = 1)
BARplot(data = it.AMTS, addsums = TRUE)
BARplot(data = it.AMTS, na.action = "na.rm")
BARplot(data = it.AMTS, freq = FALSE)
BARplot(data = it.AMTS, freq = FALSE, na.action = "na.rm")
library(RASCHplot)
BARplot(data = it.AMTS)
devtools::document()
library(RASCHplot)
BARplot(data = it.AMTS)
BARplot(data = it.AMTS, which.item = 1)
BARplot(data = it.AMTS, addsums = TRUE)
BARplot(data = it.AMTS, na.action = "na.rm")
BARplot(data = it.AMTS, freq = FALSE)
BARplot(data = it.AMTS, freq = FALSE, na.action = "na.rm")
BARplot(data = it.AMTS, freq = FALSE, addsums = TRUE)
strat.var <- amts$sex
BARplot(data = it.AMTS, which.item = 1, strat.var = strat.var)
devtools::document()
devtools::document()
?all_of
library(RASCHplot)
library('lavaan')
?lavaan
data(HolzingerSwineford1939)
HolzingerSwineford1939
SPADI <- read.csv(url("https://erda.ku.dk/public/archives/bacc560d26b01f7a65e77a9712a92e86/SPADI.csv"))
SPADI
str(SPADI)
?save
SPADI
save(SPADI, file = "/home/ann-sophie/wip/R/RASCHplot/data/SPADI.rda")
devtools::document()
devtools::document()
library(RASCHplot)
data(SPADI)
str(SPADI)
?SPADI
?diamnods
?diamonds
itemsall <- SPADI[,9:16]
items <- small[complete.cases(itemsall),]
items <- itemsall[complete.cases(itemsall),]
BARplot(items)
devtools::document()
library(RASCHplot)
?SPADI
?mtcars
devtools::document()
library(RASCHplot)
?SPADI
# Chunk 1: setup
library(knitr)
knitr::opts_chunk$set(echo = TRUE, message=FALSE,
tidy = TRUE,
tidy.opts = list(blank = TRUE, arrow = TRUE),
highlight = TRUE,
collapse = FALSE,
cache.extra = R.version, autodep=TRUE,
fig.width=5, fig.height=4, comment=NA)
library(tidyverse)
OkabeIto <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#999999")
theme_set(theme_minimal())
options(ggplot2.continuous.colour = OkabeIto)
options(ggplot2.continuous.fill = OkabeIto)
options(ggplot2.discrete.colour = OkabeIto)
options(ggplot2.discrete.fill = OkabeIto)
# Chunk 3
library(RASCHplot)
# Chunk 4
data(SPADI)
# Chunk 5
str(SPADI)
# Chunk 6
itemsall <- SPADI[,9:16]
items <- itemsall[complete.cases(itemsall),]
# Chunk 7
BARplot(items)
# Chunk 8
BARplot(items, which.item = 1)
BARplot(items, which.item = c(3,4))
items
which.item = c(3,4)
data=items
?ggplot2
=geom_bar
?ggplot
?geom_bar
items <- SPADI[,9:16]
model <- RM(items)
apply(items, 1, function(x), sum(is.na(x)))
apply(items, 1, function(x) sum(is.na(x)))
which(apply(items, 1, function(x) sum(is.na(x))) == ncol(items))
ncol(items)
apply(items, 1, function(x) sum(is.na(x))) == ncol(items)
which(apply(SPADIraw, 1, function(x) sum(is.na(x))) == ncol(SPADIraw))
SPADIraw <- read.csv("data-raw/SPADI.csv")
which(apply(SPADIraw, 1, function(x) sum(is.na(x))) == ncol(SPADIraw))
str(SPADI)
itemsP <- SPADIraw[, 4:8]
itemsD <- SPADIraw[, 9:16]
idxP <- which(apply(itemsP, 1, function(x) sum(is.na(x))) == ncol(itemsP))
idxP
idxD <- which(apply(itemsD, 1, function(x) sum(is.na(x))) == ncol(itemsD))
idxD
SPADI <- SPADI[-c(idxP, idxD), ]
dim(SPADIraw)
dim(SPADI)
?devtools::use_data
??use_data
usethis::use_data_raw()
usethis::use_data_raw()
usethis::use_data_raw()
usethis::use_data_raw()
data(SPADI)
dim(SPADI)
SPADIraw <- read.csv("https://erda.ku.dk/public/archives/bacc560d26b01f7a65e77a9712a92e86/SPADI.csv")
SPADIraw <- read.csv("https://erda.ku.dk/public/archives/bacc560d26b01f7a65e77a9712a92e86/SPADI.csv")
itemsP <- SPADIraw[, 4:8]
itemsD <- SPADIraw[, 9:16]
idxP <- which(apply(itemsP, 1, function(x) sum(is.na(x))) == ncol(itemsP))
idxD <- which(apply(itemsD, 1, function(x) sum(is.na(x))) == ncol(itemsD))
SPADI <- SPADIraw[-c(idxP, idxD), ]
write_csv(SPADI, "data-raw/SPADI.csv")
save(SPADI, file = "/home/ann-sophie/wip/R/RASCHplot/data/SPADI.rda")
usethis::use_data_raw()
usethis::use_data_raw()
usethis::use_data()
usethis::use_data_raw()
usethis::use_data()
usethis::use_data(SPADI)
devtools::document()
library(RASCHplot)
items <- SPADI[,9:16]
model <- RM(items)
BARplot(data = items)
BARplot(data = items, addsums = TRUE)
BARplot(data = items, freq = FALSE, na.action = "na.rm")
BARplot(data = items, freq = FALSE)
BARplot(data = items, freq = FALSE, na.action = "na.rm")
strat.var <- SPADI$over60
BARplot(data = items, which.item = 1, strat.var = strat.var)
str(SPADI)
strat.var <- as.factor(SPADI$over60)
BARplot(data = items, which.item = 1, strat.var = strat.var)
library(RASCHplot)
devtools::document()
library(RASCHplot)
BARplot(data = items, which.items = c(3,4))
BARplot(data = items, which.item = c(3,4))
which.item = c(3,4)
freq = TRUE
addsums = FALSE
na.action = c("na.plot")
strat.var = NULL
na.action <- match.arg(na.action)
if (is.double(which.item) | is.integer(which.item)) {
if (any(which.item < 1) | any(which.item > ncol(data))) {
stop("some values of which.item are smaller than 1 or greater than number of items in the model")
}
}
if(any(class(data) %in% c("Rm", "eRm"))) {
df <- data$X
} else if (any(class(data) == "matrix")) {
df <- as.data.frame(data)
} else {
df <- data
}
if (!is.null(strat.var) & length(strat.var) != nrow(df)) {
stop("lengths of stratification variable must equal number of rows in data input")
}
if (is.null(strat.var)) {
longdf <- longdffct(df, which.item, freq)
barplt(longdf, addsums, na.action, freq)
} else {
longdf <- longdffct(df, which.item, freq, strat.var)
barplt(longdf, addsums, na.action, freq, strat.var)
}
is.null(strat.var)
longdf <- longdffct(df, which.item, freq)
is.null(strat.var)
any(is.numeric(which.item)) & length(which.item) == 1
dfs <- data.frame(df, strat.var = strat.var)
dfs
df
dim(df)
length(strat.var)
strat.var
longdf <- df %>%
dplyr::select(all_of(which.item)
)
longdf <- df %>%
dplyr::select(all_of(which.item)) %>%
dplyr::mutate_at(c(which.item), factor) %>%
dplyr::count(across(all_of(which.item))) %>%
dplyr::mutate(q = n/sum(n) * 100)  %>%
dplyr::mutate(item = colnames(df)[which.item]) %>%
dplyr::rename_with(.cols = 1, ~"Score") %>%
dplyr::mutate(Score = forcats::fct_rev(Score))
longdf <- df %>%
dplyr::select(all_of(which.item)) %>%
dplyr::mutate_at(c(which.item), factor) %>%
dplyr::count(across(all_of(which.item))) %>%
dplyr::mutate(q = n/sum(n) * 100)
longdf <- df %>%
dplyr::select(all_of(which.item)) %>%
dplyr::mutate_at(c(which.item), factor) %>%
dplyr::count(across(all_of(which.item)))
longdf <- df %>%
dplyr::select(all_of(which.item)) %>%
dplyr::mutate_at(c(which.item), factor)
longdf <- df %>%
dplyr::select(all_of(which.item))
df %>%
dplyr::select(all_of(which.item)) %>%
dplyr::mutate_at(c(which.item), factor)
df %>%
dplyr::select(all_of(which.item))
which.item
df %>%
dplyr::select(all_of(which.item)) %>%
dplyr::mutate_at(c(colnames(df)[which.item]), factor)
longdf <- df %>%
dplyr::select(all_of(which.item)) %>%
dplyr::mutate_at(c(colnames(df)[which.item]), factor) %>%
dplyr::count(across(all_of(colnames(df)[which.item]))) %>%
dplyr::mutate(q = n/sum(n) * 100)  %>%
dplyr::mutate(item = colnames(df)[which.item]) %>%
dplyr::rename_with(.cols = 1, ~"Score") %>%
dplyr::mutate(Score = forcats::fct_rev(Score))
colnames(df)[which.item]
df %>%
dplyr::select(all_of(which.item)) %>%
dplyr::mutate_at(c(colnames(df)[which.item]), factor) %>%
dplyr::count(across(all_of(colnames(df)[which.item]))) %>%
dplyr::mutate(q = n/sum(n) * 100)
longdf <- dfs %>%
dplyr::select(c(all_of(which.item), strat.var)) %>%
dplyr::mutate_at(c(colnames(df)[which.item]), factor) %>%
dplyr::count(across(c(all_of(colnames(df)[which.item]), strat.var))) %>%
dplyr::mutate(q = n/sum(n) * 100)  %>%
dplyr::mutate(item = colnames(df)[which.item]) %>%
dplyr::rename_with(.cols = 1, ~"Score") %>%
dplyr::mutate(Score = forcats::fct_rev(Score))
dfs %>%
dplyr::select(c(all_of(which.item), strat.var)) %>%
dplyr::mutate_at(c(colnames(df)[which.item]), factor) %>%
dplyr::count(across(c(all_of(colnames(df)[which.item]), strat.var))) %>%
dplyr::mutate(q = n/sum(n) * 100)
any(is.numeric(which.item)) & length(which.item) == 1
dfs <- data.frame(df, strat.var = strat.var)
df
strat.var
longdf <- df %>%
dplyr::select(all_of(which.item)) %>%
tidyr::pivot_longer(any_of(which.item), names_to = "item", values_to = "Score") %>%
dplyr::mutate(Score = as.factor(Score)) %>%
dplyr::mutate(Score = forcats::fct_rev(Score)) %>%
dplyr::count(item, Score) %>%
dplyr::group_by(item) %>%
dplyr::mutate(q = n/sum(n) * 100)
df %>%
dplyr::select(all_of(which.item)) %>%
tidyr::pivot_longer(any_of(which.item), names_to = "item", values_to = "Score") %>%
dplyr::mutate(Score = as.factor(Score))
df %>%
dplyr::select(all_of(which.item)) %>%
tidyr::pivot_longer(any_of(colnames(df)[which.item]), names_to = "item", values_to = "Score")
longdf <- df %>%
dplyr::select(all_of(which.item)) %>%
tidyr::pivot_longer(any_of(colnames(df)[which.item]), names_to = "item", values_to = "Score") %>%
dplyr::mutate(Score = as.factor(Score)) %>%
dplyr::mutate(Score = forcats::fct_rev(Score)) %>%
dplyr::count(item, Score) %>%
dplyr::group_by(item) %>%
dplyr::mutate(q = n/sum(n) * 100)
library(RASCHplot)
BARplot(data = items, which.item = c(3,4))
dim(SPADI)
?geom_bar
table(items)
table(items[,c(1,2)])
