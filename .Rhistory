#' @param exp.val exp.val
#' @param data_obs data_obs
#' @param Tot.val_grp Tot.val_grp
#' @param obs.val_grp obs.val_grp
#' @param itmtit itmtit
#' @param col col
#' @noRd
ciccplot <- function(data_exp, Tot.val, exp.val, data_obs, Tot.val_grp, obs.val_grp, itmtit, CI.bound, col) {
x <- ggplot(data = data_exp, aes(x = Tot.val, y= exp.val, color = "Expected")) +
geom_line() + #linetype = "dashed") +
#geom_point() +
geom_point(data = data_obs, aes(x = Tot.val_grp, y = obs.val_grp, color = "Observed"), size = 1) +
scale_colour_manual(values = col) +
ggtitle(paste0("Item: ", itmtit)) +
xlab("Total Score") +
ylab("Item-Score") +
geom_errorbar(data = data_obs, aes(x = Tot.val_grp, y = obs.val_grp,
ymin = obs.val_grp - .data$CI.bound, ymax = obs.val_grp + .data$CI.bound,
color = "Observed"),
width = 0) + #, size = .5) +
scale_x_continuous(breaks = integer_breaks(), minor_breaks = Tot.val) + #breaks = Tot.val) +
guides(colour = guide_legend(override.aes = list(shape = c(NA, 1))))
}
pp[[plotidx]] <- ciccplot(data_exp, Tot.val, exp.val, data_obs, Tot.val_grp, obs.val_grp, itmtit, col)
plotidx <- plotidx+1
library(RASCHplot)
CICCplot(model = model.SPADI)
?all_of
.data$
items <- SPADI[,9:16]
which.item = "all"
freq = TRUE
addsums = FALSE
na.action = c("na.plot")
(is.double(which.item) | is.integer(which.item))
if (is.double(which.item) | is.integer(which.item)) {
if (any(which.item < 1) | any(which.item > ncol(data))) {
stop("some values of which.item are smaller than 1 or greater than number of items in the model")
}
}
if(any(class(data) %in% c("Rm", "eRm"))) {
df <- data$X
} else if (any(class(data) == "matrix")) {
df <- as.data.frame(data)
} else {
df <- data
}
if (!is.null(strat.var) & length(strat.var) != nrow(df)) {
stop("lengths of stratification variable must equal number of rows in data input")
}
strat.var = NULL
if (is.null(strat.var)) {
longdf <- longdffct(df, which.item, freq)
barplt(longdf, addsums, na.action, freq)
} else {
longdf <- longdffct(df, which.item, freq, strat.var)
barplt(longdf, addsums, na.action, freq, strat.var)
}
any(is.numeric(which.item)) & length(which.item) == 1
dfs <- data.frame(df, strat.var = strat.var)
df
all(which.item == "all")
if (all(which.item == "all")) {
which.item <- 1:ncol(df)
}
is.null(strat.var)
df %>%
dplyr::select(dplyr::all_of(which.item))
library(tidyverse)
df %>%
dplyr::select(dplyr::all_of(which.item))
df %>%
dplyr::select(dplyr::all_of(which.item)) %>%
tidyr::pivot_longer(dplyr::any_of(colnames(df)[which.item]), names_to = "item", values_to = "Score")
df %>%
dplyr::select(dplyr::all_of(which.item)) %>%
tidyr::pivot_longer(dplyr::any_of(colnames(df)[which.item]), names_to = "item", values_to = "Score") %>%
dplyr::mutate(Score = as.factor(Score))
df %>%
dplyr::select(dplyr::all_of(which.item)) %>%
tidyr::pivot_longer(dplyr::any_of(colnames(df)[which.item]), names_to = "item", values_to = "Score") %>%
dplyr::mutate(Score = as.factor(.data$Score))
devtools::document()
?qpdf
library(qpdf)
install.packages("qpdf")
library(pdftools)
install.packages("pdftools")
library(RASCHplot)
library("eRm")
library("ltm")
library("difR")
data(verbal, package = "difR")
dat_1 <- verbal[, 1:24]
res_rm_1 <- RM(dat_1)
plotICC(res_rm_1, item.subset = "S2WantShout")
abline(v = -0.18, col = "grey")
abline(h = .5, col = "grey")
plotICC(res_rm_1, item.subset = "S2WantShout", bty = "n")
?plot
plotICC(res_rm_1, item.subset = "S2WantShout", bty = "n", axes = FALSE)
plotICC(res_rm_1, item.subset = "S2WantShout", bty = "n", axes = FALSE,
xlab = "", ylab = "", main = "")
text(x = 0, y = 0.5, "RASCHplot", srt=20)
text(x = 0, y = 0.5, "RASCHplot", srt=25)
text(x = 0, y = 0.5, "RASCHplot", srt=45)
plotICC(res_rm_1, item.subset = "S2WantShout", bty = "n", axes = FALSE,
xlab = "", ylab = "", main = "")
text(x = 0, y = 0.5, "RASCHplot", srt=45)
?postscript
getwd()
pdf("/home/ann-sophie/wip/pa2122/karl/raschplots/ggp.pdf", family = "Courier")
plotICC(res_rm_1, item.subset = "S2WantShout", bty = "n", axes = FALSE,
xlab = "", ylab = "", main = "")
text(x = 0, y = 0.5, "RASCHplot", srt=45)
dev.off()
?text
plotICC(res_rm_1, item.subset = "S2WantShout", bty = "n", axes = FALSE,
xlab = "", ylab = "", main = "")
text(x = 0, y = 0.5, "RASCHplot", srt=45, cex = 3)
text(x = 0, y = 0.55, "RASCHplot", srt=45, cex = 3)
text(x = 0, y = 0.65, "RASCHplot", srt=45, cex = 3)
text(x = -.1, y = 0.65, "RASCHplot", srt=45, cex = 3)
plotICC(res_rm_1, item.subset = "S2WantShout", bty = "n", axes = FALSE,
xlab = "", ylab = "", main = "")
text(x = -.1, y = 0.65, "RASCHplot", srt=45, cex = 3)
text(x = -.3, y = 0.65, "RASCHplot", srt=45, cex = 3)
plotICC(res_rm_1, item.subset = "S2WantShout", bty = "n", axes = FALSE,
xlab = "", ylab = "", main = "")
text(x = -.4, y = 0.6, "RASCHplot", srt=45, cex = 3)
plotICC(res_rm_1, item.subset = "S2WantShout", bty = "n", axes = FALSE,
xlab = "", ylab = "", main = "")
text(x = -.6, y = 0.58, "RASCHplot", srt=45, cex = 3)
pdf("/home/ann-sophie/wip/pa2122/karl/raschplots/ggp.pdf", family = "Courier")
plotICC(res_rm_1, item.subset = "S2WantShout", bty = "n", axes = FALSE,
xlab = "", ylab = "", main = "")
text(x = -.6, y = 0.58, "RASCHplot", srt=45, cex = 3)
dev.off()
?plot
plotICC(res_rm_1, item.subset = "S2WantShout", bty = "n", axes = FALSE,
xlab = "", ylab = "", main = "", asp = 1)
text(x = -.6, y = 0.58, "RASCHplot", srt=45, cex = 3)
plotICC(res_rm_1, item.subset = "S2WantShout", bty = "n", axes = FALSE,
xlab = "", ylab = "", main = "", asp = .5)
plotICC(res_rm_1, item.subset = "S2WantShout", bty = "n", axes = FALSE,
xlab = "", ylab = "", main = "", asp = 8)
pdf("/home/ann-sophie/wip/pa2122/karl/raschplots/ggp.pdf", family = "Courier")
plotICC(res_rm_1, item.subset = "S2WantShout", bty = "n", axes = FALSE,
xlab = "", ylab = "", main = "", asp = 8)
text(x = -.6, y = 0.58, "RASCHplot", srt=45, cex = 3)
dev.off()
pdf("/home/ann-sophie/wip/pa2122/karl/raschplots/ggp.pdf", family = "Courier")
plotICC(res_rm_1, item.subset = "S2WantShout", bty = "n", axes = FALSE,
xlab = "", ylab = "", main = "", asp = 6)
text(x = -.6, y = 0.58, "RASCHplot", srt=45, cex = 3)
dev.off()
par(mar = c(0,0,0,0))
plotICC(res_rm_1, item.subset = "S2WantShout", bty = "n", axes = FALSE,
xlab = "", ylab = "", main = "", asp = 6)
text(x = -.6, y = 0.58, "RASCHplot", srt=45, cex = 3)
par(mar = c(0,0,0,0))
pdf("/home/ann-sophie/wip/pa2122/karl/raschplots/ggp.pdf", family = "Courier")
plotICC(res_rm_1, item.subset = "S2WantShout", bty = "n", axes = FALSE,
xlab = "", ylab = "", main = "", asp = 6)
text(x = -.6, y = 0.58, "RASCHplot", srt=50, cex = 3)
dev.off()
par(mar = c(0,0,0,0))
pdf("/home/ann-sophie/wip/pa2122/karl/raschplots/ggp.pdf", family = "Courier")
par(mar = c(0,0,0,0))
plotICC(res_rm_1, item.subset = "S2WantShout", bty = "n", axes = FALSE,
xlab = "", ylab = "", main = "", asp = 6)
text(x = -.6, y = 0.58, "RASCHplot", srt=50, cex = 3)
dev.off()
?pdf
pdf("/home/ann-sophie/wip/pa2122/karl/raschplots/ggp.pdf", family = "Courier",
width = 5, height = 5)
plotICC(res_rm_1, item.subset = "S2WantShout", bty = "n", axes = FALSE,
xlab = "", ylab = "", main = "", asp = 6)
text(x = -.6, y = 0.58, "RASCHplot", srt=55, cex = 3)
dev.off()
?plotICC
par(mar = c(0,0,0,0))
pdf("/home/ann-sophie/wip/pa2122/karl/raschplots/ggp.pdf", family = "Courier",
width = 5, height = 5)
plotICC(res_rm_1, item.subset = "S2WantShout", bty = "n", axes = FALSE,
xlab = "", ylab = "", main = "", asp = 6)
text(x = -.6, y = 0.58, "RASCHplot", srt=55, cex = 3)
dev.off()
par(mar = c(0,0,0,0))
pdf("/home/ann-sophie/wip/pa2122/karl/raschplots/ggp.pdf", family = "Courier",
width = 5, height = 5)
plotICC(res_rm_1, item.subset = "S2WantShout", bty = "n", axes = FALSE,
xlab = "", ylab = "", main = "", asp = 6)
text(x = -.6, y = 0.58, "RASCHplot", srt=50, cex = 3)
dev.off()
devtools::document()
devtools::document()
library(RASCHplot)
devtools::document()
devtools::document()
devtools::document()
library(RASCHplot)
?CICCplot
library(RASCHplot)
?CICCplot
data(SPADI)
SPADI.complete <- SPADI[complete.cases(SPADI), ]
it.SPADI <- SPADI.complete[, 9:16]
model.SPADI <- eRm::PCM(it.SPADI)
library(haven)
path <- file.path("/home/ann-sophie/wip/pa2122/jorgen/fsvstat/e22/220913/fysforh.sav")
dataset <- read_sav(path)
df <- dataset %>%
rowwise() %>%
mutate(TotalScore = sum(c_across(Itema:Itemk))) %>%
mutate(TotalScoreFact = as.factor(TotalScore)) %>%
mutate(across(12:15, as.factor))
library(tidyverse)
df <- dataset %>%
rowwise() %>%
mutate(TotalScore = sum(c_across(Itema:Itemk))) %>%
mutate(TotalScoreFact = as.factor(TotalScore)) %>%
mutate(across(12:15, as.factor))
fita <- glm(Itema ~ Byggeår + Køn + AlderKat + Skolestr + TotalScoreFact, data = df)
pvals <- data.frame(pvals.a = summary(fita)$coefficients[2:8 ,"Pr(>|t|)"])
fitb <- glm(Itemb ~ Byggeår + Køn + AlderKat + Skolestr + TotalScoreFact, data = df)
pvals$pvals.b <- summary(fitb)$coefficients[2:8 ,"Pr(>|t|)"]
fitc <- glm(Itemc ~ Byggeår + Køn + AlderKat + Skolestr + TotalScoreFact, data = df)
pvals$pvals.c <- summary(fitc)$coefficients[2:8 ,"Pr(>|t|)"]
fitd <- glm(Itemd ~ Byggeår + Køn + AlderKat + Skolestr + TotalScoreFact, data = df)
pvals$pvals.d <- summary(fitd)$coefficients[2:8 ,"Pr(>|t|)"]
fite <- glm(Iteme ~ Byggeår + Køn + AlderKat + Skolestr + TotalScoreFact, data = df)
pvals$pvals.e <- summary(fite)$coefficients[2:8 ,"Pr(>|t|)"]
fitf <- glm(Itemf ~ Byggeår + Køn + AlderKat + Skolestr + TotalScoreFact, data = df)
pvals$pvals.f <- summary(fitf)$coefficients[2:8 ,"Pr(>|t|)"]
fitg <- glm(Itemg ~ Byggeår + Køn + AlderKat + Skolestr + TotalScoreFact, data = df)
pvals$pvals.g <- summary(fitg)$coefficients[2:8 ,"Pr(>|t|)"]
fith <- glm(Itemh ~ Byggeår + Køn + AlderKat + Skolestr + TotalScoreFact, data = df)
pvals$pvals.h <- summary(fith)$coefficients[2:8 ,"Pr(>|t|)"]
fiti <- glm(Itemi ~ Byggeår + Køn + AlderKat + Skolestr + TotalScoreFact, data = df)
pvals$pvals.i <- summary(fiti)$coefficients[2:8 ,"Pr(>|t|)"]
fitj <- glm(Itemj ~ Byggeår + Køn + AlderKat + Skolestr + TotalScoreFact, data = df)
pvals$pvals.j <- summary(fitj)$coefficients[2:8 ,"Pr(>|t|)"]
fitk <- glm(Itemk ~ Byggeår + Køn + AlderKat + Skolestr + TotalScoreFact, data = df)
pvals$pvals.k <- summary(fitk)$coefficients[2:8 ,"Pr(>|t|)"]
colnames(pvals)[which(pvals == min(pvals), arr.ind = TRUE)[2]]
pvals
summary(fita)
summary(fitd)
?anova
anova(fitb, fitb2)
fitb2 <- glm(Itemb ~ Byggeår + Køn + AlderKat + TotalScoreFact, data = df)
anova(fitb, fitb2)
lrtest(fitb, fitb2)
lmtest::lrtest(fitb, fitb2)
fitd <- glm(Itemd ~ Byggeår + Køn + AlderKat + Skolestr + TotalScoreFact, data = df)
fitd2 <- glm(Itemd ~ Byggeår + Køn + AlderKat + TotalScoreFact, data = df)
lmtest::lrtest(fitd, fitd2)
mdscore::wald.test(fitd, fitd2)
aod::wald.test(fitd, fitd2)
anova(fitd)
anova(fitd, test = "Chisq")
install.packages("aod")
install.packages("aod")
library(aod)
wald.test(fitd)
?wald.test
wald.test(fitd, Terms = 4)
wald.test(b = coef(fitd), Sigma = vcov(fitd), Terms = 4)
wald.test(b = coef(fitd), Sigma = vcov(fitd))
wald.test(b = coef(fitd), Sigma = vcov(fitd), Terms = 1)
wald.test(b = coef(fitd), Sigma = vcov(fitd), Terms = 2)
wald.test(b = coef(fitd), Sigma = vcov(fitd), Terms = 3)
wald.test(b = coef(fitd), Sigma = vcov(fitd), Terms = 4)
wald.test(b = coef(fitd), Sigma = vcov(fitd), Terms = 5)
library(RASCHplot)
devtools::document()
library(RASCHplot)
library(RASCHplot)
library(eRm)
data(SPADI)
SPADI.complete <- SPADI[complete.cases(SPADI), ]
it.SPADI <- SPADI.complete[, 9:16]
model.SPADI <- eRm::PCM(it.SPADI)
strat.vars <- list(gender = SPADI.complete[, "gender"])
DIFplot(model = model.SPADI, strat.vars = strat.vars)
strat.vars <- list(gender = SPADI.complete[, "gender"], over60 = SPADI.complete[, "over60"])
DIFplot(model = model.SPADI, strat.vars = strat.vars)
DIFplot(model = model.SPADI, which.item = c(1,2), strat.vars = strat.vars)
lower.groups <- list(gender = c(0, 1, 2, 5, 8, 10), over60 = c(0, 3, 6, 9))
DIFplot(model = model.SPADI, strat.vars = strat.vars, lower.groups = lower.groups)
DIFplot(model = model.SPADI, which.item = c(1,2),
strat.vars = strat.vars, lower.groups = lower.groups)
lower.groups <- list(gender = list("1" = c(0, 5, 15, 20, 30, 40),
"2" = c(0,  5, 10)),
over60 = list("0" = c(0, 10, 15, 20),
"1" = c(0, 8, 15, 17, 18, 22, 29, 38)))
DIFplot(model = model.SPADI, strat.vars = strat.vars, lower.groups = lower.groups)
data(amts)
library(iarm)
data(amts)
SPADI.complete <- amts[complete.cases(amts), ]
it.SPADI <- SPADI.complete[, 9:16]
model.SPADI <- eRm::PCM(it.SPADI)
strat.vars <- list(gender = SPADI.complete[, "gender"])
?geom_line
library(RASCHplot)
?geom_point
?geom_line
library(RASCHplot)
library(RASCHplot)
?geom_errorbar
library(RASCHplot)
?geom_point
library(RASCHplot)
?guide_legend
library(RASCHplot)
library(RASCHplot)
devtools::document()
library(RASCHplot)
library(eRm)
data(SPADI)
SPADI.complete <- SPADI[complete.cases(SPADI), ]
it.SPADI <- SPADI.complete[, 9:16]
model.SPADI <- eRm::PCM(it.SPADI)
strat.vars <- list(gender = SPADI.complete[, "gender"])
DIFplot(model = model.SPADI, strat.vars = strat.vars)
?geom_errorbar
library(RASCHplot)
DIFplot(model = model.SPADI, strat.vars = strat.vars)
devtools::document()
devtools::document()
model = model.SPADI
strat.vars = strat.vars
which.item = 1
lower.groups = "all"
grid.items = FALSE
error.bar = TRUE
dodge.width = 0.5
point.size= 1
line.size = 1
line.type = 1
errorbar.width = 0.1
errorbar.size = 1
if (is.null(strat.vars)) {
pp <- CICCplot(model, which.item, lower.groups, grid.items, error.bar, point.size, line.size, line.type, errorbar.width, errorbar.size, ...)
warning("no variables for stratification; running CICCplot")
return(pp)
}
data <- model$X
betas <- model$betapar
k <- ncol(data)
N <- nrow(data)
m_i <- sapply(1:k, FUN = function(i) length(unique(data[,i]))-1)
parsidx <- rep(1:k, m_i)
if (any(which.item == "all")) {
itmidx <- 1:k
} else {
itmidx <- suppressWarnings(as.numeric(which.item))
if (anyNA(itmidx)) {
stop("all values of which.item can not be converted to numeric")
}
}
if (is.null(names(strat.vars))) {
stop("the list of stratification variables is not named")
}
if (is.list(lower.groups)) {
if (is.null(names(lower.groups))) {
stop("the list lower.groups is not named")
}
if (!all(names(lower.groups) == names(strat.vars))) {
stop("names of lower.groups and strat.vars must be identical")
}
if (all(sapply(lower.groups, is.list))) {
if (!all(sapply(lower.groups, length) == sapply(strat.vars, function(x) nlevels(as.factor(x))))) {
stop("length of lists in lower.groups list must be equal to number of levels in corresponding strat.vars")
}
}
}
n.itemcat <- apply(data, 2, FUN = function(x) {
max(x, na.rm = T) - min(x, na.rm = T)
}
)
par.itemgrp <- rep(1:ncol(data), times = n.itemcat)
if (all(sapply(lower.groups, is.double)) | all(sapply(lower.groups, is.integer))) {
if (any(unlist(lower.groups) > length(betas)))
stop("lower.group index greater than maximum possible score")
}
if (any(itmidx > k)) {
stop("some values of which.item are greater than number of items in the model")
}
if (any(itmidx < 1)) {
stop("some values of which.item < 1")
}
if (!all(sapply(strat.vars, length) == N)) {
stop("lengths of stratification variables must equal number of rows in data input of RM")
}
pp <- list(rep(NA, length(itmidx)))
ii <- itmidx
Tot.val <- 0:length(betas)
plotidx <- 1
for (itm in ii) {
exp.val <- sapply(Tot.val, FUN = function(R) {
l <- par.itemgrp[par.itemgrp!=itm]
par.itemgrp_noitem <- ifelse(l > itm, l-1, l)
g1 <- gamma_r_rec_pcm(betas, R, par.itemgrp)
return(sum(sapply(1:sum(par.itemgrp==itm), FUN = function(X) {
g2 <- gamma_r_rec_pcm(betas[par.itemgrp!=itm], R-X, par.itemgrp_noitem)
return(X*exp(betas[par.itemgrp==itm][X])*g2/g1)
})
))
})
data_exp <- data.frame(Tot.val, exp.val)
pp[[plotidx]] <- vector(mode = "list", length(strat.vars))
names(pp[[plotidx]]) <- names(strat.vars)
for(l in seq_along(strat.vars)) {
stratname <- names(strat.vars)[l]
levstrat <- levels(as.factor(strat.vars[[l]]))
nlevstrat <- length(levstrat)
if (!is.double(lower.groups) & !is.integer(lower.groups)) {
if (all(lower.groups == "all")) {
Tot.val_grp <- 0:length(betas)
obs.val_grp <- lapply(1:nlevstrat, function(j) {
sapply(Tot.val_grp, FUN = function(x) {
strat.data <- data[strat.vars[[l]] == levstrat[j], ]
mean(strat.data[which(rowSums(strat.data) == x), itm])
})
})
var.val_grp <- lapply(1:nlevstrat, function(j) {
sapply(Tot.val_grp, FUN = function(x) {
strat.data <- data[strat.vars[[l]] == levstrat[j], ]
var(strat.data[which(rowSums(strat.data) == x), itm])
})
})
n.val_grp <- lapply(1:nlevstrat, function(j) {
sapply(Tot.val_grp, FUN = function(x) {
strat.data <- data[strat.vars[[l]] == levstrat[j], ]
length(strat.data[which(rowSums(strat.data) == x), itm])
})
})
Tot.val_grp <- lapply(1:nlevstrat, function(j) 0:length(betas))
}
}
if (is.double(unlist(lower.groups))|is.integer(unlist(lower.groups))) {
if (is.list(lower.groups)) {
lgrpsgrps <- lower.groups[[stratname]]
} else {
lgrpsgrps <- lower.groups
}
if(!is.list(lgrpsgrps)) {
lgrpsgrps <- lapply(1:nlevstrat, function(x) lgrpsgrps) #list(lgrpsgrps)
names(lgrpsgrps) <- levstrat
}
#if(!all(sapply(lgrpsgrps, is.list))) {
#  lgrpsgrps <- lapply(1:nlevstrat, function(x) lgrpsgrps)
#}
Tot.val_grp <- vector(mode = "list", length(lgrpsgrps))
obs.val_grp <- vector(mode = "list", length(lgrpsgrps))
var.val_grp <- vector(mode = "list", length(lgrpsgrps))
n.val_grp <- vector(mode = "list", length(lgrpsgrps))
for (j in seq_along(lgrpsgrps)) { #1:nlevstrat) {
strat.data <- data[strat.vars[[l]] == levstrat[j], ]
#for(lgrpsidx in seq_along(lgrpsgrps)) {
lgrps <- lgrpsgrps[[levstrat[j]]] # unlist(lgrpsgrps[[j]])
breaks <- sort(x = unique(c(floor(lgrps), min(Tot.val))))
n.groups <- length(breaks)
for (i in seq_along(breaks)) {
if (i != n.groups) {
obs.val_grp[[j]][i] <- mean(strat.data[which(rowSums(strat.data) %in% breaks[i]:(breaks[i+1]-1)), itm])
var.val_grp[[j]][i] <- var(strat.data[which(rowSums(strat.data) %in% breaks[i]:(breaks[i+1]-1)), itm])
n.val_grp[[j]][i] <- length(strat.data[which(rowSums(strat.data) %in% breaks[i]:(breaks[i+1]-1)), itm])
Tot.val_grp[[j]][i] <- mean(rowSums(strat.data)[which(rowSums(strat.data) %in% breaks[i]:(breaks[i+1]-1))])
} else{
obs.val_grp[[j]][i] <- mean(strat.data[which(rowSums(strat.data) %in% breaks[i]:max(Tot.val)), itm])
var.val_grp[[j]][i] <- var(strat.data[which(rowSums(strat.data) %in% breaks[i]:max(Tot.val)), itm])
n.val_grp[[j]][i] <- length(strat.data[which(rowSums(strat.data) %in% breaks[i]:max(Tot.val)), itm])
Tot.val_grp[[j]][i] <- mean(rowSums(strat.data)[which(rowSums(strat.data) %in% breaks[i]:max(Tot.val))])
}
}
#}
}
}
data_obs <- lapply(1:nlevstrat, function(j) {
df <- data.frame(Tot.val_grp = Tot.val_grp[[j]],
obs.val_grp = obs.val_grp[[j]],
var.val_grp = var.val_grp[[j]],
n.val_grp = n.val_grp[[j]],
CI.bound = NA,
strat.var = levstrat[j])
df <- df[df$n.val_grp != 0, ]
if (error.bar) {
df$CI.bound <- 1.96*sqrt(df[,"var.val_grp"]/df[,"n.val_grp"])
}
df
})
itmtit <- colnames(data)[itm]
data_obs_long <- do.call(rbind, data_obs)
cidx <- 1:(nlevels(as.factor(data_obs_long$strat.var)) + 1)
col <- c("darkgrey", "#E69F00", "#56B4E9", "#009E73", "#F0E442",
"#0072B2", "#D55E00", "#CC79A7")[cidx]
names(col) <- c("Expected", levels(as.factor(data_obs_long$strat.var)))
pp[[plotidx]][[l]] <- difplot(data_exp, Tot.val, exp.val, data_obs_long, itmtit, stratname, dodge.width, point.size, line.size, line.type, errorbar.width, errorbar.size, ...)
}
plotidx <- plotidx + 1
}
library(RASCHplot)
library(RASCHplot)
shiny::runApp('inst/apps/RMDitemfit')
library(RASCHplot)
runApp('inst/apps/RMDitemfit')
runApp('inst/apps/RMPitemfit')
runApp('inst/apps/RMDitemfit')
